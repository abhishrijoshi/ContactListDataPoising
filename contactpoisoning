import UIKit
import Contacts

func randomWord(wordLength: Int = 6) -> String {
    
    let kCons = 1
    let kVows = 2
    
    var cons: [String] = [
        // single consonants. Beware of Q, it"s often awkward in words
        "b", "c", "d", "f", "g", "h", "j", "k", "l", "m",
        "n", "p", "r", "s", "t", "v", "w", "x", "z",
        // possible combinations excluding those which cannot start a word
        "pt", "gl", "gr", "ch", "ph", "ps", "sh", "st", "th", "wh"
    ]
    
    // consonant combinations that cannot start a word
    var cons_cant_start: [String] = [
        "ck", "cm",
        "dr", "ds",
        "ft",
        "gh", "gn",
        "kr", "ks",
        "ls", "lt", "lr",
        "mp", "mt", "ms",
        "ng", "ns",
        "rd", "rg", "rs", "rt",
        "ss",
        "ts", "tch"
    ]
    
    var vows : [String] = [
        // single vowels
        "a", "e", "i", "o", "u", "y",
        // vowel combinations your language allows
        "ee", "oa", "oo",
    ]
    
    // start by vowel or consonant ?
    var current = (Int(arc4random_uniform(2)) == 1 ? kCons : kVows );
    
    var word : String = ""
    while ( count(word) < wordLength ){
        // After first letter, use all consonant combos
        if count(word) == 2 {
            cons = cons + cons_cant_start
        }
        
        // random sign from either $cons or $vows
        var rnd: String = "";
        var index: Int;
        if current == kCons {
            index = Int(arc4random_uniform(UInt32(cons.count)))
            rnd = cons[index]
        }else if current == kVows {
            index = Int(arc4random_uniform(UInt32(vows.count)))
            rnd = vows[index]
        }
        
        
        // check if random sign fits in word length
        var tempWord = "\(word)\(rnd)"
        if( count(tempWord) <= wordLength ) {
            word = "\(word)\(rnd)"
            // alternate sounds
            current = ( current == kCons ) ? kVows : kCons;
        }
    }
    
    return word

let phoneNumber = Int.random(in: 1...10)


// Create a mutable object to add to the contact
let contact = CNMutableContact()


// Store the profile picture as data
let image = UIImage(systemName: "person.crop.circle")
contact.imageData = image?.jpegData(compressionQuality: 1.0)


contact.givenName = word
contact.familyName = word



let homeEmail = CNLabeledValue(label: CNLabelHome, value: "word@example.com" as NSString)
let workEmail = CNLabeledValue(label: CNLabelWork, value: "word.appleseed@icloud.com" as NSString)

contact.emailAddresses = [homeEmail, workEmail]


contact.phoneNumbers = [CNLabeledValue(
    label: CNLabelPhoneNumberiPhone,
    value: CNPhoneNumber(stringValue: phoneNumber ))]



let homeAddress = CNMutablePostalAddress()
homeAddress.street = "One Apple Park Way"
homeAddress.city = "Cupertino"
homeAddress.state = "CA"
homeAddress.postalCode = "95014"
contact.postalAddresses = [CNLabeledValue(label: CNLabelHome, value: homeAddress)]


var birthday = DateComponents()
birthday.day = 1
birthday.month = 4
birthday.year = 1988  // (Optional) Omit the year value for a yearless birthday
contact.birthday = birthday


// Save the newly created contact
let store = CNContactStore()
let saveRequest = CNSaveRequest()
saveRequest.add(contact, toContainerWithIdentifier: nil)


do {
    try store.execute(saveRequest)
} catch {
    print("Saving contact failed, error: \(error)")
    // Handle the error
}
static let CNContactStoreDidChange: NSNotification.Name
}
